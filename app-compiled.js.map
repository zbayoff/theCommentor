{"version":3,"sources":["app.js"],"names":[],"mappings":";;AAAA,IAAM,UAAU,QAAQ,SAAR,CAAhB;AACA,IAAM,aAAa,QAAQ,aAAR,CAAnB;AACA,IAAM,cAAc,QAAQ,SAAR,EAAmB,WAAvC;;eAII,QAAQ,yBAAR,C;IAFF,K,YAAA,K;IACA,gB,YAAA,gB;;gBAKE,QAAQ,0BAAR,C;IAFF,W,aAAA,W;IACA,Q,aAAA,Q;;AAEF,IAAM,MAAM,SAAZ;AACA,IAAM,OAAO,IAAb;;AAEA,IAAI,GAAJ,CAAQ,WAAW,UAAX,CAAsB;AAC5B,YAAU;AADkB,CAAtB,CAAR;;AAIA,IAAI,GAAJ,CAAQ,SAAR,EAAmB,QAAQ,MAAR,CAAe,QAAf,CAAnB;;AAEA;AACA,YAAY,OAAZ,CAAoB,sEAApB,EAA4F,UAAC,GAAD,EAAM,QAAN,EAAmB;AAC7G,MAAI,GAAJ,EAAS,OAAO,QAAQ,GAAR,CAAY,GAAZ,CAAP;AACT,OAAK,QAAL;AACA,MAAI,MAAJ,CAAW,IAAX,EAAiB,YAAM;AACrB,YAAQ,GAAR,wBAAiC,IAAjC;AACD,GAFD;AAGD,CAND;;AAQA;AACA,IAAI,IAAJ,CAAS,WAAT,EAAsB;AACpB;AACA,MAAM,MAAN,EAAc,yBAAd,EAAyC,QAAzC,CAAkD,EAAC,KAAI,CAAL,EAAlD,CAFoB,EAGpB,MAAM,SAAN,EAAiB,yBAAjB,EAA4C,QAA5C,CAAqD,EAAC,KAAI,CAAL,EAArD,CAHoB,CAAtB,EAKG,UAAC,GAAD,EAAM,GAAN,EAAc;AACf,MAAM,SAAS,iBAAiB,GAAjB,CAAf;AACA,MAAI,CAAC,OAAO,OAAP,EAAL,EAAuB;AACrB,YAAQ,GAAR,CAAY,mBAAZ;AACD,GAFD,MAEO;AACL,OAAG,UAAH,CAAc,UAAd,EAA0B,IAA1B,CAA+B,IAAI,IAAnC,EAAyC,UAAC,GAAD,EAAM,MAAN,EAAiB;AACxD,UAAI,GAAJ,EAAS;AACP,eAAO,QAAQ,GAAR,CAAY,GAAZ,CAAP;AACD,OAFD,MAEO;AACL,gBAAQ,GAAR,CAAY,mBAAZ;AACA,YAAI,QAAJ,CAAa,GAAb;AACD;AACF,KAPD;AAQD;AACF,CAnBD;;AAqBA,IAAI,GAAJ,CAAQ,aAAR,EAAuB,KAAvB;;AAEA,IAAI,GAAJ,CAAQ,GAAR,EAAa,UAAC,GAAD,EAAM,GAAN,EAAc;AACzB,MAAI,QAAJ,CAAa,YAAY,aAAzB;AACD,CAFD;;AAIA;AACA;AACA","file":"app-compiled.js","sourcesContent":["const express = require('express');\nconst bodyParser = require('body-parser');\nconst MongoClient = require('mongodb').MongoClient;\nconst {\n  check,\n  validationResult\n} = require('express-validator/check');\nconst {\n  matchedData,\n  sanitize\n} = require('express-validator/filter');\nconst app = express();\nconst port = 9000;\n\napp.use(bodyParser.urlencoded({\n  extended: true\n}));\n\napp.use('/public', express.static('public'));\n\n// to connect to database\nMongoClient.connect('mongodb://zrbayoff:theroad12345@ds239359.mlab.com:39359/thecommentor', (err, database) => {\n  if (err) return console.log(err);\n  db = database;\n  app.listen(port, () => {\n    console.log(`Listening on port ${port}!`);\n  });\n});\n\n// Post request\napp.post('/comments', [\n  // check name and message fields for values\n  check('name', 'Please enter your name.').isLength({min:1}),\n  check('message', 'Please write a message.').isLength({min:1})\n\n], (req, res) => {\n  const errors = validationResult(req);\n  if (!errors.isEmpty()) {\n    console.log('there were errors');\n  } else {\n    db.collection('comments').save(req.body, (err, result) => {\n      if (err) {\n        return console.log(err);\n      } else {\n        console.log('saved to database');\n        res.redirect('/');\n      }\n    });\n  }\n});\n\napp.set('view engine', 'ejs');\n\napp.get('/', (req, res) => {\n  res.sendFile(__dirname + '/index.html');\n});\n\n// app.listen(port, () => {\n//     console.log(`Listening on port ${port}`);\n// });"]}